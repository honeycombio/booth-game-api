I'm working in Golang.
I have some JSON coming in, a JSON object with some nested JSON objects in it. The properties in the JSON contain strings, numbers, dates in a string format, nulls, and other objects. There are no arrays.

I also have an OpenTelemetry span. 
My goal is to get all the properties in the JSON on to the OTel span as attributes.
Not the null properties, leave those out. Put the date properties in as strings AND as unix timestamp with a "_unix" suffix.

So for instance, if the input object contains
```
{ 
  "stuff": "things",
  "more": {
    "dingleberries": 42,
    "when": "2024-01-30T14:29:16.261245+00:00"
  },
  "topic": null
}
```

then the code that executes would be like
```
span.SetAttributes(attribute.String("stuff", "things"))
span.SetAttributes(attribute.Number("more.dingleberries", 42))
span.SetAttributes(attribute.String("more.when", "2024-01-30T14:29:16.261245+00:00"))
span.SetAttributes(attribute.Number("more.when_unix", 1706624956))
```

Write the Go code to do that for a generic JSON object.
